# ----------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License
name: $(TeamProject)-$(BuildDefinitionName)-$(SourceBranchName)-$(Date:yyyy.MM.dd)-$(Rev:rr)

trigger: none

resources:
  containers:
    - container: universal_linux
      image: universal_linux
      endpoint: featurizersbuild

stages:
  - template: "templates/BuildAndTest.prologue_stage_template.yaml"
    parameters:
      release_build: false
      prerelease_build_name: ""
      is_ci_build: false

  - stage: BuildAndTest_Stage
    displayName: "Build and Test:"
    dependsOn: Prologue_Stage

    jobs:
      # ----------------------------------------------------------------------
      # Official Builds
      - template: "templates/BuildAndTest.job_template.yaml"
        parameters:
          # agent_pool: AI-Pytorch-Win-CPU
          # agent_pool_is_custom: true
          agent_pool: windows-2019
          configuration: x64
          operating_system: Windows
          tester_code_coverage: True

      - template: "templates/BuildAndTest.job_template.yaml"
        parameters:
          # agent_pool: AI-Pytorch-Win-CPU
          # agent_pool_is_custom: true
          agent_pool: windows-2019
          configuration: x86
          operating_system: Windows

      - template: "templates/BuildAndTest.job_template.yaml"
        parameters:
          agent_pool: ubuntu-16.04
          configuration: system_compiler
          operating_system: Linux

      - template: "templates/BuildAndTest.job_template.yaml"
        parameters:
          agent_pool: macOS-10.14
          configuration: system_compiler
          operating_system: MacOS

      # ----------------------------------------------------------------------
      # Sanity Builds

      # When code coverage is enabled, we only test debug builds. Execute release tests to ensure that everything is working.
      - template: "templates/BuildAndTest.job_template.yaml"
        parameters:
          # agent_pool: AI-Pytorch-Win-CPU
          # agent_pool_is_custom: true
          agent_pool: windows-2019
          configuration: x64
          job_suffix: " (test only)"
          operating_system: Windows
          test_only: true
          tester_release_only: true

      - template: "templates/BuildAndTest.job_template.yaml"
        parameters:
          # agent_pool: AI-Pytorch-Win-CPU
          # agent_pool_is_custom: true
          agent_pool: windows-2019
          configuration: x64_MSVC
          operating_system: Windows

      - template: "templates/BuildAndTest.job_template.yaml"
        parameters:
          # agent_pool: AI-Pytorch-Win-CPU
          # agent_pool_is_custom: true
          agent_pool: windows-2019
          configuration: x86_MSVC
          operating_system: Windows

      - template: "templates/BuildAndTest.job_template.yaml"
        parameters:
          agent_pool: ubuntu-16.04
          configuration: x64
          operating_system: Linux

      # Note that the universal_linux build is generating code that produces runtime errors. This build remains to ensure
      # that the code compiles on older platforms.
      - template: "templates/BuildAndTest.job_template.yaml"
        parameters:
          agent_pool: ubuntu-16.04
          agent_pool_container: universal_linux
          configuration: universal_linux
          operating_system: Linux
          job_suffix: " (build only)"
          tester_build_only: true

  - stage: PostBuild_Stage
    displayName: "Post Build:"
    dependsOn: BuildAndTest_Stage

    jobs:
      - template: "templates/_job_template.yaml"
        parameters:
          # agent_pool: AI-Pytorch-Win-CPU
          # agent_pool_is_custom: true
          agent_pool: windows-2019
          job_name: Package_Job
          job_display_name: "Package"
          steps:
            - template: "BuildAndTest.package_steps_template.yaml"
              parameters:
                configuration: system_compiler
                operating_system: Windows
